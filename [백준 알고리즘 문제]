[백준 알고리즘 문제]

num 2588 (for문 사용)

# input 
a = int(input())
b = list(input())
n = len(b)
c = ''

# output
for i in range(n):
    c += b[i]
    print(a*int(b[n-i-1]))
    
print(a*int(c)) 



num 10950

import sys
# input 
n = int(input())
for i in range(n):
    a,b = map(int, sys.stdin.readline().split())
    print(a+b)



num 10951 (몇개인지 모르는 input 두개를 받는 경우)

import sys

while 1:
	try:                                                  # normal case
		a,b = map(int, sys.stdin.readline().split())
		print(a+b)
	except:                                               # error case
		break



num 10952 (마지막 입력이 0 0 이 나오는 경우)

import sys

while 1:
	a,b = map(int, sys.stdin.readline().split())
	if a+b != 0:
		print(a+b)
	else:
		break



num 10953 (하나의 숫자 + 그만큼의 input)

import sys

n = int(input())
for i in range(n):
	a,b = map(int, sys.stdin.readline().split(','))
	print(a+b)



num 11021 (문자와 숫자가 공존 .format()사용)

import sys

n = int(input())

for i in range(n):
	a,b = map(int, sys.stdin.readline().split())
	print('Case #{}: {}'.format(i+1, a+b))



num 11022 (더 많은 문자와 숫자)

import sys

n = int(input())

for i in range(n):
	a,b = map(int, sys.stdin.readline().split())
	print('Case #{}: {} + {} = {}'.format(i+1, a, b, a+b))



num 11718 (입력 받은 그대로 출력)  

while 1:
	try:
		a = str(input())       @@ sys.stdin.readline()을 쓰면 EOF를 빈 문자열로 return. 즉 필요없는 값이 return
		print(a)
	except:
		break	



num 11719 (입력 받은 그대로 출력 - 공백, 빈칸 존재)

while 1:
	try:
		a = str(input())
		print(a)
	except:
		break



num 11720 (입력 받은 숫자들의 합 구하기)

n = int(input())
a = list(str(input()))
list_sum = 0

for i in range(n):
	list_sum += int(a[i])

print(list_sum)



num 11721 (입력받은 문자 10개씩 잘라서 출력)

a = str(input())

for i in range(0, len(a), 10):
	print(a[i:i+10])



num 2741 (입력된 숫자까지 차례대로 출력)

n = int(input())

for i in range(1,n+1):
	print(i)



num 2742 (입력된 숫자부터 역순으로 출력)

n = int(input())

for i in range(n, 0, -1):
	print(i)



num 2739 (입력된 숫자를 구구단으로 만들기)

n = int(input())

for i in range(1, 10):
	print('{} * {} = {}'.format(n, i, n*i))

	

